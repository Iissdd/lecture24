이미지 다운로드
https://drive.google.com/file/d/1c9PB3dAIhv0mDUE_3yLDg6w9gA7P75I0/view?usp=sharing


import numpy as np
import matplotlib.pyplot as plt

import tensorflow as tf
from tensorflow import keras

(X_train, y_train), (X_test, y_test) = keras.datasets.cifar10.load_data()
X_train.shape, y_train.shape, X_test.shape, y_test.shape

### 0~255 값을 0.0~1.0 으로 바꾼다
X_train = X_train/255
X_test = X_test/255

### 원핫인코딩
y_train = np.eye(10)[y_train.ravel()] # ravel() : 1차원형태로 바꾼다
y_test = np.eye(10)[y_test.ravel()]

X_train.shape, y_train.shape, X_test.shape, y_test.shape

labels = ['airplane',
 'automobile',
 'bird',
 'cat',
 'deer',
 'dog',
 'frog',
 'horse',
 'ship',
 'truck']
 
model = keras.models.Sequential()
model.add(keras.layers.Conv2D(32, (3,3), padding='same',
                              input_shape=(32,32,3), activation='relu'))
model.add(keras.layers.MaxPooling2D((2,2)))
model.add(keras.layers.Conv2D(64, (3,3), padding='same', activation='relu'))
model.add(keras.layers.MaxPooling2D((2,2)))
model.add(keras.layers.Conv2D(128, (3,3), padding='same', activation='relu'))
model.add(keras.layers.MaxPooling2D((2,2)))

model.add(keras.layers.Flatten())
model.add(keras.layers.Dense(128, activation='relu'))
model.add(keras.layers.Dense(10, activation='softmax'))

model.summary()

model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['acc'])
              
history = model.fit(X_train, y_train, batch_size=64, epochs=20, validation_split=0.2)
